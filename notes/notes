
pip freeze > requirements.txt

meeting pp_pool: 0
meeting pp_div: 0

race pp_fav: 0
race pp_fav: "2151.03"
race pp_fav_perc: 0
race pp_fav_perc: "(6%)"
race pp_nr: 0
race pp_pool: "Â£33,014.24 - Won"

nag pp_pool: "39.3"
nag pp_pool: 0
nag pp_pool: "Not backed"
nag pp_pool_perc: "(1%)"
nag pp_pool_perc: ""
nag pp_pool_perc: 0


"rewrite nags in race in mtg"
my_mtgs = read_mtgs_from_directory("mtg")
for mtg in my_mtgs:
    for race in mtg.races:
        my_nags = race.nags
        if isinstance(race.nags, list):
            my_dict = {}
            my_dict = {nag.name: nag for nag in my_nags}
            race.nags = my_dict
        for nag in race.nags.values():
            if nag.placed:
                nag.pp_placed = True
            else:
                nag.pp_placed = False
        race.set_rp_forecast_chance()
        race.set_sp_chance()
    print(f"Saving {mtg.name} - {mtg.race_date}")
    mtg.writemtg()

"write all meetings in mtg to database"
import rp
my_mtgs = rp.read_mtgs_from_directory("mtg")
for mtg in my_mtgs:
    mtg.write_mtg_to_db("./test_db/test_db.sqlite")

"recalculate value for all mtgs in dir mtg and write them into dir meeting"
import rp
my_mtgs = rp.read_mtgs_from_directory("mtg")
for mtg in my_mtgs:
    for race in mtg.races:
        race.set_starters_and_nr_flag()
        race.set_rp_forecast_chance()
        race.set_sp_chance()
        race.set_rp_ppvalue()
        race.set_sp_ppvalue()
    mtg.write_summary_to_csv()
    mtg.writemtg()

import rp
mtg = rp.unpickle_mtg("meetings/2020-11-03-exeter.pickle")
for race in mtg.races:
    race.set_starters_and_nr_flag()
    race.set_rp_forecast_chance()
    race.set_sp_chance()
    race.set_rp_ppvalue()
    race.set_sp_ppvalue()
mtg.write_summary_to_csv()
mtg.writemtg()

import rp
mtg = rp.unpickle_mtg("meetings/2020-10-30-newcastle.pickle")
for race in mtg.races:
    race.set_starters_and_nr_flag()
    race.set_rp_forecast_chance()
    race.set_sp_chance()
    race.set_rp_ppvalue()
    race.set_sp_ppvalue()
mtg.write_summary_to_csv()
mtg.writemtg()

import rp
mtg = rp.unpickle_mtg("meetings/2020-10-17-market.pickle")
for race in mtg.races:
    race.set_starters_and_nr_flag()
    race.set_rp_forecast_chance()
    race.set_sp_chance()
    race.set_rp_ppvalue()
    race.set_sp_ppvalue()
mtg.write_summary_to_csv()
mtg.writemtg()

# 4-place example
import rp
mtg = rp.unpickle_mtg("meetings/2020-11-26-taunton.pickle")
for race in mtg.races:
    race.set_starters_and_nr_flag()
    race.set_rp_forecast_chance()
    race.set_sp_chance()
    race.set_rp_ppvalue()
    race.set_sp_ppvalue()
mtg.write_summary_to_csv()
mtg.writemtg()

# n/r from 3 places to 2 places example
import rp
mtg = rp.unpickle_mtg("meetings/2021-02-07-musselburgh.pickle")
for race in mtg.races:
    race.set_starters_and_nr_flag()
    race.set_rp_forecast_chance()
    race.set_sp_chance()
    race.set_rp_ppvalue()
    race.set_sp_ppvalue()
mtg.write_summary_to_csv()
mtg.writemtg()
